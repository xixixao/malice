errorHandler = require './errorprinter'
{concat} = require './metaCoffeeUtils'

module.exports = (OMeta, OMLib) -> generateCode: (ast) ->

  ometa MAliceCodeGeneration

    trans = [:t apply(t):ans] -> ans
    list = trans*

    Label :name
      -> ["#{name}:"]
    End :name
      -> [""]
    Variable :name :type
      -> [""]
    Array :name :type :size
      -> [""]
    IfFalse :condition :jumpto
      -> ["\tcmp #{condition}, 0",
          "je #{jumpto}"]
    IfTrue :condition :jumpto
      -> ["\tcmp #{condition}, 0",
          "\tjne #{jumpto}"]
    Jump :to
      -> ["\tjmp #{to}"]
    Argument :name :type
      -> [""]
    Element :ofArray :i
      -> [""]
    Decrement :variable
      -> ["\tdec #{variable}"]
    Increment :variable
      -> ["\tinc #{variable}"]
    Call :name :argumentCount
      -> ["\tcall #{name}",
          "\tadd rsp, #{4 * argumentCount}"]
    Assignment :into :from
      -> ["\tmov #{into}, #{from}"]
    CallAssignment :into :name :argumentCount
      -> ["\tcall #{name}",
          "\tadd rsp, #{4 * argumentCount}",
          "\tmov #{into}, eax"]
    ImmAssignment :into :operator :e1 :e2
      -> [""]
    Return :result
      -> ["\tmov eax, #{result}",
          "\tret"]
    Output :value
      -> [""]
    Read :into :type
      -> [""]


  global = MAliceCodeGeneration.matchAll ast.global, "list", undefined, (m, i) -> console.error "ERROR while traversing AST in code generation"
  concat global, MAliceCodeGeneration.matchAll ast.stack, "list", undefined, (m, i) -> console.error "ERROR while traversing AST in code generation"
